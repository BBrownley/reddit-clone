[{"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\index.js":"1","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\App.js":"2","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\reportWebVitals.js":"3","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\services\\posts.js":"4","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\components\\PostList.jsx":"5","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\components\\Post.jsx":"6","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\components\\PostView.jsx":"7","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\store.js":"8","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\reducers\\postsReducer.js":"9"},{"size":618,"mtime":1607753320384,"results":"10","hashOfConfig":"11"},{"size":1452,"mtime":1607753050780,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":234,"mtime":1607655014220,"results":"14","hashOfConfig":"11"},{"size":2957,"mtime":1607753802696,"results":"15","hashOfConfig":"11"},{"size":124,"mtime":1607669278203,"results":"16","hashOfConfig":"11"},{"size":3329,"mtime":1607753560868,"results":"17","hashOfConfig":"11"},{"size":398,"mtime":1607747103543,"results":"18","hashOfConfig":"11"},{"size":479,"mtime":1607746961092,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"48lrnp",{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\index.js",[],"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\App.js",["40","41","42","43"],"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\reportWebVitals.js",[],["44","45"],"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\services\\posts.js",["46","47"],"import axios from \"axios\";\r\nconst baseUrl = \"/posts\";\r\n\r\nconst getAll = async () => {\r\n  const req = await axios.get(\"http://localhost:3001/posts\");\r\n  console.log(req.data);\r\n  return req.data;\r\n};\r\n\r\nexport default {\r\n  getAll\r\n};\r\n","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\components\\PostList.jsx",["48","49"],"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\components\\Post.jsx",[],"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\components\\PostView.jsx",["50","51"],"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\store.js",[],"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\reducers\\postsReducer.js",[],{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":25},{"ruleId":"52","severity":1,"message":"56","line":11,"column":8,"nodeType":"54","messageId":"55","endLine":11,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":41,"column":13,"nodeType":"59","endLine":43,"endColumn":4},{"ruleId":"57","severity":1,"message":"60","line":43,"column":6,"nodeType":"61","endLine":43,"endColumn":8,"suggestions":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"52","severity":1,"message":"67","line":2,"column":7,"nodeType":"54","messageId":"55","endLine":2,"endColumn":14},{"ruleId":"68","severity":1,"message":"69","line":10,"column":1,"nodeType":"70","endLine":12,"endColumn":3},{"ruleId":"71","severity":1,"message":"72","line":111,"column":11,"nodeType":"73","endLine":111,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":115,"column":11,"nodeType":"73","endLine":115,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":130,"column":13,"nodeType":"73","endLine":130,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":134,"column":13,"nodeType":"73","endLine":134,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'postService' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"'baseUrl' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"77","fix":"78"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"79","text":"80"},[941,943],"[dispatch]"]