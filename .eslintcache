[{"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\index.js":"1","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\App.js":"2","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\reportWebVitals.js":"3","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\services\\posts.js":"4","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\components\\PostList.jsx":"5","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\components\\Post.jsx":"6","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\components\\PostView.jsx":"7","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\store.js":"8","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\reducers\\postsReducer.js":"9"},{"size":618,"mtime":1607753320384,"results":"10","hashOfConfig":"11"},{"size":2399,"mtime":1607835836623,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":234,"mtime":1607655014220,"results":"14","hashOfConfig":"11"},{"size":3303,"mtime":1607835810133,"results":"15","hashOfConfig":"11"},{"size":124,"mtime":1607669278203,"results":"16","hashOfConfig":"11"},{"size":3320,"mtime":1607757097126,"results":"17","hashOfConfig":"11"},{"size":398,"mtime":1607747103543,"results":"18","hashOfConfig":"11"},{"size":479,"mtime":1607746961092,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"48lrnp",{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\index.js",[],["41","42"],"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\App.js",["43","44","45","46","47"],"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\reportWebVitals.js",[],"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\services\\posts.js",["48","49"],"import axios from \"axios\";\r\nconst baseUrl = \"/posts\";\r\n\r\nconst getAll = async () => {\r\n  const req = await axios.get(\"http://localhost:3001/posts\");\r\n  console.log(req.data);\r\n  return req.data;\r\n};\r\n\r\nexport default {\r\n  getAll\r\n};\r\n","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\components\\PostList.jsx",["50","51"],"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\components\\Post.jsx",[],"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\components\\PostView.jsx",["52","53"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\nimport FontAwesome from \"react-fontawesome\";\r\n\r\nconst Post = styled.div`\r\n  border-bottom: 1px solid #ddd;\r\n  padding: 10px;\r\n  line-height: 1.5;\r\n  display: flex;\r\n`;\r\n\r\nconst PostMain = styled.div`\r\n  margin-bottom: 15px;\r\n  .fa-history {\r\n    color: #999;\r\n  }\r\n  a {\r\n    color: #4385f5;\r\n    &:hover {\r\n      cursor: pointer;\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  color: #222;\r\n  font-weight: bold;\r\n  font-size: 1.5rem;\r\n  display: inline-block;\r\n  &:hover {\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  max-width: 80ch;\r\n  border: 1px solid #777;\r\n  /* border-radius: 5px; */\r\n  background-color: #fafafa;\r\n  padding: 10px;\r\n`;\r\n\r\nconst VoteContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 8px;\r\n  align-items: center;\r\n  margin-right: 20px;\r\n  color: #777;\r\n  font-size: 1.25rem;\r\n  .upvote {\r\n    color: saturate(blue, 30%);\r\n  }\r\n  .upvote:hover,\r\n  .downvote:hover {\r\n    cursor: pointer;\r\n  }\r\n  .upvote:hover {\r\n    color: #4385f5;\r\n  }\r\n  .downvote:hover {\r\n    color: #ff3548;\r\n  }\r\n  & > * {\r\n    margin-bottom: 5.7px;\r\n  }\r\n`;\r\n\r\nconst PostOptions = styled.div`\r\n  color: #777;\r\n  margin-top: 10px;\r\n  & > span {\r\n    margin-right: 10px;\r\n    padding: 4px;\r\n    border-radius: 5px;\r\n  }\r\n  .favorite-active {\r\n    background-color: #eee;\r\n    color: #333;\r\n    font-weight: bold;\r\n    .fa-heart {\r\n      color: #fc74a4;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FollowButton = styled.span`\r\n  border: 1px solid #fc74a4;\r\n  .fa-heart {\r\n    color: #fc74a4;\r\n  }\r\n`;\r\n\r\nconst PostView = () => {\r\n  const posts = useSelector(state => state.posts);\r\n\r\n  const match = useRouteMatch(\"/groups/:group/:id\");\r\n  const post = match\r\n    ? posts.find(post => post.id.toString() === match.params.id.toString())\r\n    : null;\r\n\r\n  console.log(posts.find(post => post.id === match.params.id));\r\n\r\n  if (!post) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Post>\r\n      <VoteContainer>\r\n        <FontAwesome name=\"plus-square\" className=\"upvote\" />\r\n        <span>{post.votes}</span>\r\n        <FontAwesome name=\"minus-square\" className=\"downvote\" />\r\n      </VoteContainer>\r\n      <div>\r\n        <PostMain>\r\n          <Link to={`/groups/${post.group}/${post.id}`}>\r\n            <Title>{post.title}</Title>{\" \"}\r\n          </Link>\r\n          <div>\r\n            posted <FontAwesome name=\"history\" className=\"fa-history\" /> 10\r\n            hours ago in{\" \"}\r\n            <a href=\"#\">\r\n              <strong>{post.group}</strong>\r\n            </a>{\" \"}\r\n            by{\" \"}\r\n            <a href=\"#\">\r\n              <strong>{post.author}</strong>\r\n            </a>\r\n          </div>\r\n        </PostMain>\r\n\r\n        <Content>{post.content}</Content>\r\n        <PostOptions>\r\n          <span>\r\n            <FontAwesome name=\"comments\" /> {post.comments.length} comments\r\n          </span>\r\n          <FollowButton>\r\n            <FontAwesome name=\"heart\" className=\"fa-heart\" /> Follow\r\n          </FollowButton>\r\n        </PostOptions>\r\n      </div>\r\n    </Post>\r\n  );\r\n};\r\n\r\nexport default PostView;\r\n","D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\store.js",[],"D:\\webdev projects\\reddit-clone\\frontend\\app\\src\\reducers\\postsReducer.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":8,"column":3,"nodeType":"60","messageId":"61","endLine":8,"endColumn":16},{"ruleId":"58","severity":1,"message":"62","line":17,"column":8,"nodeType":"60","messageId":"61","endLine":17,"endColumn":19},{"ruleId":"58","severity":1,"message":"63","line":53,"column":10,"nodeType":"60","messageId":"61","endLine":53,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":55,"column":13,"nodeType":"66","endLine":57,"endColumn":4},{"ruleId":"64","severity":1,"message":"67","line":57,"column":6,"nodeType":"68","endLine":57,"endColumn":8,"suggestions":"69"},{"ruleId":"58","severity":1,"message":"70","line":2,"column":7,"nodeType":"60","messageId":"61","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":10,"column":1,"nodeType":"73","endLine":12,"endColumn":3},{"ruleId":"74","severity":1,"message":"75","line":121,"column":11,"nodeType":"76","endLine":121,"endColumn":23},{"ruleId":"74","severity":1,"message":"75","line":127,"column":11,"nodeType":"76","endLine":127,"endColumn":23},{"ruleId":"74","severity":1,"message":"75","line":129,"column":13,"nodeType":"76","endLine":129,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":133,"column":13,"nodeType":"76","endLine":133,"endColumn":25},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'useRouteMatch' is defined but never used.","Identifier","unusedVar","'postService' is defined but never used.","'sortBy' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'baseUrl' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [dispatch]",{"range":"82","text":"83"},[1114,1116],"[dispatch]"]